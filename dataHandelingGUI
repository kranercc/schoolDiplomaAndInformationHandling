#! python3
import openpyxl,time,os,sys
from tkinter import simpledialog,Tk,Label,Button,mainloop,messagebox,PhotoImage,Entry,StringVar
from PIL import Image, ImageTk


locuImg = "\\\SERVER\\e\\diplome\\programu\\logo.png"

#1
locuFisierului = "\\\SERVER\\e\\diplome\\programu\\test.xlsx"
wb = openpyxl.load_workbook(locuFisierului)
sheet = wb.get_sheet_by_name("Sheet1")

#2
locuFisierului2 = "\\\SERVER\\e\\diplome\\programu\\diplomefaranume.xlsx"
wb2 = openpyxl.load_workbook(locuFisierului2)
sheet2 = wb2.get_sheet_by_name("Sheet1")


master = Tk()
#set size
sizex,sizey = 500,700
master.minsize(sizex,sizey)
master.title("Info grabber & diploma status ~ Iacob \"krane\" Catalin")

ws = master.winfo_screenwidth() # width of the screen
hs = master.winfo_screenheight() # height of the screen
x = (ws/2) - (sizex/2)
y = (hs/2) - (sizey/2)
master.geometry('%dx%d+%d+%d' % (sizex, sizey, x, y))

#logo
img = ImageTk.PhotoImage(Image.open(locuImg))
panel = Label(master, image = img)
panel.pack(side = "bottom", fill = "both", expand = "yes")

os.system("cls")

#make upper
l= []
nume = simpledialog.askstring("Info", "Nume initiala Tata Prenume")#make uppercase
for i in nume:
    l.append(i.upper())

#diacritice
diacritice = ['Ă','Î','Ţ','Â','Ş']
for i in l:
    if i in diacritice:
        if i == "Ă":
            i == "A"
        if i == "Î":
            i == "I"
        if i == "Ţ":
            i == "T"
        if i == "Â":
            i == "A"
        if i == "Ş":
            i == "S"

#new name after workin it
nume = ''
for i in l:
    nume+=i
def getNames():
    global nume
    for i in range(2,100000):
        a=sheet.cell(row=i,column=1).value
        rownr = i
        date = ["Nume: ","Anul absolvirii: ","Ce a absolvit: ","Calificare Profesionala: ","Ridicat Diploma: "] # 5 nume 6 an 7 forma 8 calificare 9 diploma 
        if a == nume:
            for coloana in range(1,6):
                a=sheet.cell(row=rownr,column=coloana).value
                date.append(a)
            if date[5] == None:
                #print("Informatia despre nume nu a fost adaugata")
                Label(master, text="Informatia despre nume nu a fost adaugata").pack(pady=3,padx=0)
            else:
                #print(date[0],date[5])
                Label(master, text=[date[0],date[5]]).pack(pady=3,padx=0)
            if date[6] == None:
                #print("Informatia despre calificarea profesionala nu a fost adaugata")
                Label(master, text="Informatia despre calificarea profesionala nu a fost adaugata").pack(pady=3,padx=0)
            else:
                #print(date[1],date[6])
                Label(master, text=[date[1],date[6]]).pack(pady=3,padx=0)

            if date[7] == None:
                #print("Informatia despre forma absolvita [liceu/sc maistri etc] nu a fost adaugata")
                Label(master, text="Informatia despre forma absolvita nu a fost adaugata").pack(pady=3,padx=0)
            else:
                #print(date[2],date[7])
                Label(master, text=[date[2],date[7]]).pack(pady=3,padx=0)

            if date[8] == None:
                #print("Informatia despre calificare nu a fost adaugata")
                Label(master, text="Informatia despre calificare nu a fost adaugata").pack(pady=3,padx=0)
            else:
                #print(date[3],date[8])
                Label(master, text=[date[3],date[8]]).pack(pady=3,padx=0)

            if date[9] == None:
                #print("Informatia despre diploma nu a fost adaugata")
                Label(master, text="Informatia despre diploma nu a fost adaugata").pack(pady=3,padx=0)

            else:
                #print(date[4],date[9])
                Label(master, text=[date[4],date[9]]).pack(pady=3,padx=0)

            break
        if a == None:
            break
    return a
def changeDiploma():
    global nume,wb,locuFisierului
    for i in range(1,100000):
        a = sheet.cell(row=i,column=1).value
        rownr = i
        if a == nume:
            sheet.cell(row=rownr,column=5).value = "DA"
            wb.save(locuFisierului)
            sys.exit()
#actions = input("1. Verificari date\n2. I-a fost data diploma?: ") 
Label(master, text='1. Vreau sa vad informatiile\n\n\n2. Am dat diploma elevului ').pack(pady=20,padx=0)
def getac(x):
    x = x
    if x == 1:
        getNames()
    elif x == 2:
        a=messagebox.askyesno("Save data to excel","Scrieti informatia despre diploma in DA (diploma a fost data) ?")
        if a == True:
            changeDiploma()
            print("Modificarile au fost facute.")
            sys.exit()
        else:
            pass
buton1=Button(master, height=1, width=10, text="1. Informatii", command=lambda: getac(1),pady=10)
buton1.pack()
buton2=Button(master, height=1, width=10, text="2. Diploma", command=lambda: getac(2),pady=10)
buton2.pack()

#number of diplomas given etc.
da = 0
nu = 0
anulat = 0
nimic = 0

def numberOfDiplomas():
    global da,nu,anulat,nimic
    for i in range(1,100000):
            a = sheet.cell(row=i,column=5).value
            a2 = sheet2.cell(row=i,column=2).value
            if a == None and a2 == None:
                break
            # in loc sa fie loc liber la starea diplomei, adaugati INEXISTENT
            if a == "DA":
                da+=1
            if a == "NU":
                nu+=1
            if a == "ANULAT" or a2 == "ANULAT":
                anulat+=1
            if a == "NIMIC":
                nimic+=1
    Label(master, text=["Nr total de diplome: ",da+nu+anulat]).pack(pady=3,padx=0) 
    Label(master, text=["Cate au fost eliberate: ",da]).pack(pady=3,padx=0)
    Label(master, text=["Cate sunt la scoala: ",nu]).pack(pady=3,padx=0)
    Label(master, text=["Cate diplome sunt anulate: ",anulat]).pack(pady=3,padx=0)
    Label(master, text=["Cati elevi n-au informatia despre starea diplome: ",nimic]).pack(pady=3,padx=0)
    

butonNrDiplome=Button(master, height=1, width=10, text="Numarul diplomelor.", command=lambda: numberOfDiplomas(),pady=10,padx=20)
butonNrDiplome.pack()


mainloop()
